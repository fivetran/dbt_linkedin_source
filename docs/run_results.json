{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.6", "generated_at": "2024-09-13T19:17:36.058864Z", "invocation_id": "19d405a0-d869-44b9-b742-d7e97ca368e9", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:17:35.289648Z", "completed_at": "2024-09-13T19:17:35.317394Z"}, {"name": "execute", "started_at": "2024-09-13T19:17:35.318104Z", "completed_at": "2024-09-13T19:17:35.318118Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030354022979736328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__account_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"linkedin_source_integration_tests_3\".\"linkedin_account_history_data\"", "relation_name": "\"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__account_history_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:17:35.309666Z", "completed_at": "2024-09-13T19:17:35.317841Z"}, {"name": "execute", "started_at": "2024-09-13T19:17:35.319024Z", "completed_at": "2024-09-13T19:17:35.319029Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.030736923217773438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__ad_analytics_by_campaign_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"linkedin_source_integration_tests_3\".\"linkedin_ad_analytics_by_campaign_data\"", "relation_name": "\"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__ad_analytics_by_campaign_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:17:35.312122Z", "completed_at": "2024-09-13T19:17:35.318532Z"}, {"name": "execute", "started_at": "2024-09-13T19:17:35.319783Z", "completed_at": "2024-09-13T19:17:35.319786Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03125405311584473, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__ad_analytics_by_creative_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"linkedin_source_integration_tests_3\".\"linkedin_ad_analytics_by_creative_data\"", "relation_name": "\"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__ad_analytics_by_creative_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:17:35.314871Z", "completed_at": "2024-09-13T19:17:35.318760Z"}, {"name": "execute", "started_at": "2024-09-13T19:17:35.320158Z", "completed_at": "2024-09-13T19:17:35.320162Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.031194686889648438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__campaign_group_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"linkedin_source_integration_tests_3\".\"linkedin_campaign_group_history_data\"", "relation_name": "\"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__campaign_group_history_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:17:35.328792Z", "completed_at": "2024-09-13T19:17:35.329971Z"}, {"name": "execute", "started_at": "2024-09-13T19:17:35.331962Z", "completed_at": "2024-09-13T19:17:35.331969Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00990915298461914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.linkedin_source_integration_tests.linkedin_account_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:17:35.330317Z", "completed_at": "2024-09-13T19:17:35.331393Z"}, {"name": "execute", "started_at": "2024-09-13T19:17:35.332455Z", "completed_at": "2024-09-13T19:17:35.332459Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.010113000869750977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.linkedin_source_integration_tests.linkedin_ad_analytics_by_campaign_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:17:35.322845Z", "completed_at": "2024-09-13T19:17:35.331657Z"}, {"name": "execute", "started_at": "2024-09-13T19:17:35.332838Z", "completed_at": "2024-09-13T19:17:35.332841Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012068033218383789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__campaign_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"linkedin_source_integration_tests_3\".\"linkedin_campaign_history_data\"", "relation_name": "\"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__campaign_history_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:17:35.326056Z", "completed_at": "2024-09-13T19:17:35.333151Z"}, {"name": "execute", "started_at": "2024-09-13T19:17:35.334212Z", "completed_at": "2024-09-13T19:17:35.334216Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.012591123580932617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__creative_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"linkedin_source_integration_tests_3\".\"linkedin_creative_history_data\"", "relation_name": "\"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__creative_history_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:17:35.336412Z", "completed_at": "2024-09-13T19:17:35.338498Z"}, {"name": "execute", "started_at": "2024-09-13T19:17:35.341621Z", "completed_at": "2024-09-13T19:17:35.341625Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00711512565612793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.linkedin_source_integration_tests.linkedin_ad_analytics_by_creative_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:17:35.338812Z", "completed_at": "2024-09-13T19:17:35.339887Z"}, {"name": "execute", "started_at": "2024-09-13T19:17:35.341995Z", "completed_at": "2024-09-13T19:17:35.341998Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.00722193717956543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.linkedin_source_integration_tests.linkedin_campaign_group_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:17:35.340130Z", "completed_at": "2024-09-13T19:17:35.341162Z"}, {"name": "execute", "started_at": "2024-09-13T19:17:35.342315Z", "completed_at": "2024-09-13T19:17:35.342318Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007302761077880859, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.linkedin_source_integration_tests.linkedin_campaign_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:17:35.342626Z", "completed_at": "2024-09-13T19:17:35.343677Z"}, {"name": "execute", "started_at": "2024-09-13T19:17:35.344668Z", "completed_at": "2024-09-13T19:17:35.344672Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.008547067642211914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.linkedin_source_integration_tests.linkedin_creative_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:17:35.358816Z", "completed_at": "2024-09-13T19:17:35.656162Z"}, {"name": "execute", "started_at": "2024-09-13T19:17:35.660515Z", "completed_at": "2024-09-13T19:17:35.660528Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.3389408588409424, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__ad_analytics_by_campaign", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__ad_analytics_by_campaign_tmp\"\n),\n\nmacro as (\n\n    select\n        \n    \n    \n    campaign_id\n    \n as \n    \n    campaign_id\n    \n, \n    \n    \n    clicks\n    \n as \n    \n    clicks\n    \n, \n    \n    \n    cost_in_local_currency\n    \n as \n    \n    cost_in_local_currency\n    \n, \n    \n    \n    cost_in_usd\n    \n as \n    \n    cost_in_usd\n    \n, \n    \n    \n    day\n    \n as \n    \n    day\n    \n, \n    \n    \n    impressions\n    \n as \n    \n    impressions\n    \n\n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfields as (\n    \n    select \n        source_relation,\n        date_trunc('day', day) as date_day,\n        campaign_id,\n        clicks,\n        impressions,\n        \n        cost_in_usd as cost\n        \n\n        \n\n\n\n\n\n    from macro\n)\n\nselect *\nfrom fields", "relation_name": "\"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__ad_analytics_by_campaign\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:17:35.346962Z", "completed_at": "2024-09-13T19:17:35.664468Z"}, {"name": "execute", "started_at": "2024-09-13T19:17:35.665366Z", "completed_at": "2024-09-13T19:17:35.665376Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.37128686904907227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__account_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select *\n    from \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__account_history_tmp\"\n\n), macro as (\n\n    select\n        \n    \n    \n    created_time\n    \n as \n    \n    created_time\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    last_modified_time\n    \n as \n    \n    last_modified_time\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    cast(null as TEXT) as \n    \n    status\n    \n , \n    cast(null as TEXT) as \n    \n    type\n    \n , \n    \n    \n    version_tag\n    \n as \n    \n    version_tag\n    \n\n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n\n), fields as (\n\n    select \n        source_relation,\n        id as account_id,\n        name as account_name,\n        currency,\n        cast(version_tag as numeric) as version_tag,\n        status,\n        type,\n        cast(last_modified_time as timestamp) as last_modified_at,\n        cast(created_time as timestamp) as created_at,\n        \n        row_number() over (partition by id order by last_modified_time desc) = 1 as is_latest_version\n\n    from macro\n\n)\n\nselect *\nfrom fields", "relation_name": "\"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__account_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:17:35.368574Z", "completed_at": "2024-09-13T19:17:35.665123Z"}, {"name": "execute", "started_at": "2024-09-13T19:17:35.666059Z", "completed_at": "2024-09-13T19:17:35.666067Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.3715031147003174, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__campaign_group_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select *\n    from \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__campaign_group_history_tmp\"\n\n), macro as (\n\n    select\n        \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    cast(null as boolean) as \n    \n    backfilled\n    \n , \n    \n    \n    created_time\n    \n as \n    \n    created_time\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    last_modified_time\n    \n as \n    \n    last_modified_time\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    cast(null as timestamp) as \n    \n    run_schedule_end\n    \n , \n    cast(null as timestamp) as \n    \n    run_schedule_start\n    \n , \n    cast(null as TEXT) as \n    \n    status\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n\n), fields as (\n\n    select \n        source_relation,\n        id as campaign_group_id,\n        name as campaign_group_name,\n        account_id,\n        status,\n        backfilled as is_backfilled,\n        cast(run_schedule_start as timestamp) as run_schedule_start_at,\n        cast(run_schedule_end as timestamp) as run_schedule_end_at,\n        cast(last_modified_time as timestamp) as last_modified_at,\n        cast(created_time as timestamp) as created_at,\n        \n        row_number() over (partition by id order by last_modified_time desc) = 1 as is_latest_version\n\n    from macro\n\n)\n\nselect *\nfrom fields", "relation_name": "\"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__campaign_group_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:17:35.363426Z", "completed_at": "2024-09-13T19:17:35.665659Z"}, {"name": "execute", "started_at": "2024-09-13T19:17:35.666572Z", "completed_at": "2024-09-13T19:17:35.666576Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.37413930892944336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__ad_analytics_by_creative", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select *\n    from \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__ad_analytics_by_creative_tmp\"\n\n), macro as (\n\n    select\n        \n    \n    \n    clicks\n    \n as \n    \n    clicks\n    \n, \n    \n    \n    cost_in_local_currency\n    \n as \n    \n    cost_in_local_currency\n    \n, \n    \n    \n    cost_in_usd\n    \n as \n    \n    cost_in_usd\n    \n, \n    \n    \n    creative_id\n    \n as \n    \n    creative_id\n    \n, \n    \n    \n    day\n    \n as \n    \n    day\n    \n, \n    \n    \n    impressions\n    \n as \n    \n    impressions\n    \n\n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n\n), fields as (\n\n    select\n        source_relation,\n        date_trunc('day', day) as date_day,\n        creative_id,\n        clicks, \n        impressions,\n        \n        cost_in_usd as cost\n        \n\n        \n\n\n\n\n\n    from macro\n\n)\n\nselect *\nfrom fields", "relation_name": "\"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__ad_analytics_by_creative\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:17:35.744834Z", "completed_at": "2024-09-13T19:17:35.750111Z"}, {"name": "execute", "started_at": "2024-09-13T19:17:35.750612Z", "completed_at": "2024-09-13T19:17:35.750620Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01880192756652832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.not_null_stg_linkedin_ads__ad_analytics_by_campaign_campaign_id.d6ae242f1a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__ad_analytics_by_campaign\"\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:17:35.736004Z", "completed_at": "2024-09-13T19:17:35.750379Z"}, {"name": "execute", "started_at": "2024-09-13T19:17:35.751022Z", "completed_at": "2024-09-13T19:17:35.751026Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02977609634399414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.dbt_utils_unique_combination_of_columns_stg_linkedin_ads__ad_analytics_by_campaign_source_relation__date_day__campaign_id.41aa0d6322", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, campaign_id\n    from \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__ad_analytics_by_campaign\"\n    group by source_relation, date_day, campaign_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:17:35.752896Z", "completed_at": "2024-09-13T19:17:35.758662Z"}, {"name": "execute", "started_at": "2024-09-13T19:17:35.759100Z", "completed_at": "2024-09-13T19:17:35.759105Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007203817367553711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.not_null_stg_linkedin_ads__ad_analytics_by_campaign_date_day.ef97bed766", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__ad_analytics_by_campaign\"\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:17:35.755463Z", "completed_at": "2024-09-13T19:17:35.758872Z"}, {"name": "execute", "started_at": "2024-09-13T19:17:35.759481Z", "completed_at": "2024-09-13T19:17:35.759486Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.007337808609008789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.dbt_utils_unique_combination_of_columns_stg_linkedin_ads__account_history_source_relation__account_id__version_tag.c7a0383d8c", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, account_id, version_tag\n    from \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__account_history\"\n    group by source_relation, account_id, version_tag\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:17:35.761384Z", "completed_at": "2024-09-13T19:17:35.767469Z"}, {"name": "execute", "started_at": "2024-09-13T19:17:35.767718Z", "completed_at": "2024-09-13T19:17:35.767724Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007380008697509766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.not_null_stg_linkedin_ads__account_history_account_id.a9fa7f93c0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__account_history\"\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:17:35.763855Z", "completed_at": "2024-09-13T19:17:35.768719Z"}, {"name": "execute", "started_at": "2024-09-13T19:17:35.769193Z", "completed_at": "2024-09-13T19:17:35.769199Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.008601903915405273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.not_null_stg_linkedin_ads__account_history_version_tag.58c46c5d81", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect version_tag\nfrom \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__account_history\"\nwhere version_tag is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:17:35.769554Z", "completed_at": "2024-09-13T19:17:35.776337Z"}, {"name": "execute", "started_at": "2024-09-13T19:17:35.776695Z", "completed_at": "2024-09-13T19:17:35.776700Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008400917053222656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.dbt_utils_unique_combination_of_columns_stg_linkedin_ads__campaign_group_history_source_relation__last_modified_at__campaign_group_id.4c9f328639", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, last_modified_at, campaign_group_id\n    from \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__campaign_group_history\"\n    group by source_relation, last_modified_at, campaign_group_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:17:35.773692Z", "completed_at": "2024-09-13T19:17:35.777389Z"}, {"name": "execute", "started_at": "2024-09-13T19:17:35.777878Z", "completed_at": "2024-09-13T19:17:35.777882Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.004717826843261719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.not_null_stg_linkedin_ads__campaign_group_history_campaign_group_id.3888f3777d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_group_id\nfrom \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__campaign_group_history\"\nwhere campaign_group_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:17:35.778713Z", "completed_at": "2024-09-13T19:17:35.785020Z"}, {"name": "execute", "started_at": "2024-09-13T19:17:35.785258Z", "completed_at": "2024-09-13T19:17:35.785264Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0077037811279296875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.not_null_stg_linkedin_ads__campaign_group_history_last_modified_at.a716e2a7ea", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect last_modified_at\nfrom \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__campaign_group_history\"\nwhere last_modified_at is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:17:35.782011Z", "completed_at": "2024-09-13T19:17:35.785864Z"}, {"name": "execute", "started_at": "2024-09-13T19:17:35.786346Z", "completed_at": "2024-09-13T19:17:35.786351Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.004926204681396484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.dbt_utils_unique_combination_of_columns_stg_linkedin_ads__ad_analytics_by_creative_source_relation__date_day__creative_id.7b7d839d38", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, creative_id\n    from \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__ad_analytics_by_creative\"\n    group by source_relation, date_day, creative_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:17:35.787201Z", "completed_at": "2024-09-13T19:17:35.793491Z"}, {"name": "execute", "started_at": "2024-09-13T19:17:35.793710Z", "completed_at": "2024-09-13T19:17:35.793715Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007684230804443359, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.not_null_stg_linkedin_ads__ad_analytics_by_creative_creative_id.062abfe14b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect creative_id\nfrom \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__ad_analytics_by_creative\"\nwhere creative_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:17:35.791059Z", "completed_at": "2024-09-13T19:17:35.794124Z"}, {"name": "execute", "started_at": "2024-09-13T19:17:35.794357Z", "completed_at": "2024-09-13T19:17:35.794361Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.003907203674316406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.not_null_stg_linkedin_ads__ad_analytics_by_creative_date_day.cb81bc4766", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__ad_analytics_by_creative\"\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:17:35.687527Z", "completed_at": "2024-09-13T19:17:35.965397Z"}, {"name": "execute", "started_at": "2024-09-13T19:17:35.965634Z", "completed_at": "2024-09-13T19:17:35.965640Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.3044610023498535, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__campaign_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select *\n    from \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__campaign_history_tmp\"\n\n), macro as (\n\n    select \n        \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    cast(null as boolean) as \n    \n    audience_expansion_enabled\n    \n , \n    \n    \n    campaign_group_id\n    \n as \n    \n    campaign_group_id\n    \n, \n    cast(null as TEXT) as \n    \n    cost_type\n    \n , \n    \n    \n    created_time\n    \n as \n    \n    created_time\n    \n, \n    cast(null as TEXT) as \n    \n    creative_selection\n    \n , \n    cast(null as float) as \n    \n    daily_budget_amount\n    \n , \n    cast(null as TEXT) as \n    \n    daily_budget_currency_code\n    \n , \n    cast(null as TEXT) as \n    \n    format\n    \n , \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    last_modified_time\n    \n as \n    \n    last_modified_time\n    \n, \n    cast(null as TEXT) as \n    \n    locale_country\n    \n , \n    cast(null as TEXT) as \n    \n    locale_language\n    \n , \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    cast(null as TEXT) as \n    \n    objective_type\n    \n , \n    cast(null as boolean) as \n    \n    offsite_delivery_enabled\n    \n , \n    cast(null as TEXT) as \n    \n    optimization_target_type\n    \n , \n    cast(null as timestamp) as \n    \n    run_schedule_end\n    \n , \n    cast(null as timestamp) as \n    \n    run_schedule_start\n    \n , \n    cast(null as TEXT) as \n    \n    status\n    \n , \n    cast(null as TEXT) as \n    \n    type\n    \n , \n    cast(null as float) as \n    \n    unit_cost_amount\n    \n , \n    cast(null as TEXT) as \n    \n    unit_cost_currency_code\n    \n , \n    \n    \n    version_tag\n    \n as \n    \n    version_tag\n    \n\n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n\n), fields as (\n\n    select \n        source_relation,\n        id as campaign_id,\n        name as campaign_name,\n        cast(version_tag as numeric) as version_tag,\n        campaign_group_id,\n        account_id,\n        status,\n        type,\n        cost_type,\n        creative_selection,\n        daily_budget_amount,\n        daily_budget_currency_code,\n        unit_cost_amount,\n        unit_cost_currency_code,\n        format,\n        locale_country,\n        locale_language,\n        objective_type,\n        optimization_target_type,\n        audience_expansion_enabled as is_audience_expansion_enabled,\n        offsite_delivery_enabled as is_offsite_delivery_enabled,\n        cast(run_schedule_start as timestamp) as run_schedule_start_at,\n        cast(run_schedule_end as timestamp) as run_schedule_end_at,\n        cast(last_modified_time as timestamp) as last_modified_at,\n        cast(created_time as timestamp) as created_at,\n        \n        row_number() over (partition by id order by last_modified_time desc) = 1 as is_latest_version\n\n    from macro\n\n)\n\nselect *\nfrom fields", "relation_name": "\"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__campaign_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:17:35.992466Z", "completed_at": "2024-09-13T19:17:36.024498Z"}, {"name": "execute", "started_at": "2024-09-13T19:17:36.025506Z", "completed_at": "2024-09-13T19:17:36.025516Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.034394025802612305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.dbt_utils_unique_combination_of_columns_stg_linkedin_ads__campaign_history_source_relation__version_tag__campaign_id.65ed9cedae", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, version_tag, campaign_id\n    from \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__campaign_history\"\n    group by source_relation, version_tag, campaign_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:17:35.995673Z", "completed_at": "2024-09-13T19:17:36.024828Z"}, {"name": "execute", "started_at": "2024-09-13T19:17:36.025952Z", "completed_at": "2024-09-13T19:17:36.025955Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03454089164733887, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.not_null_stg_linkedin_ads__campaign_history_campaign_id.b026971ca2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__campaign_history\"\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:17:35.998147Z", "completed_at": "2024-09-13T19:17:36.026317Z"}, {"name": "execute", "started_at": "2024-09-13T19:17:36.026743Z", "completed_at": "2024-09-13T19:17:36.026747Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0351259708404541, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.not_null_stg_linkedin_ads__campaign_history_version_tag.64954cc469", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect version_tag\nfrom \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__campaign_history\"\nwhere version_tag is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:17:35.721605Z", "completed_at": "2024-09-13T19:17:36.027408Z"}, {"name": "execute", "started_at": "2024-09-13T19:17:36.027642Z", "completed_at": "2024-09-13T19:17:36.027646Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.3330988883972168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__creative_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select *\n    from \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__creative_history_tmp\"\n\n), macro as (\n\n    select \n        \n    \n    \n    campaign_id\n    \n as \n    \n    campaign_id\n    \n, \n    \n    \n    click_uri\n    \n as \n    \n    click_uri\n    \n, \n    \n    \n    created_time\n    \n as \n    \n    created_time\n    \n, \n    cast(null as timestamp) as \n    \n    created_at\n    \n , \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    cast(null as timestamp) as \n    \n    last_modified_time\n    \n , \n    \n    \n    last_modified_at\n    \n as \n    \n    last_modified_at\n    \n, \n    \n    \n    intended_status\n    \n as \n    \n    intended_status\n    \n, \n    cast(null as TEXT) as \n    \n    status\n    \n , \n    \n    \n    text_ad_landing_page\n    \n as \n    \n    text_ad_landing_page\n    \n, \n    \n    \n    spotlight_landing_page\n    \n as \n    \n    spotlight_landing_page\n    \n\n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n\n), fields as (\n\n    select\n        source_relation,\n        id as creative_id,\n        campaign_id,\n        coalesce(status, intended_status) as status,\n        coalesce(text_ad_landing_page, spotlight_landing_page, click_uri) as click_uri,\n        cast(coalesce(last_modified_time, last_modified_at) as timestamp) as last_modified_at,\n        cast(coalesce(created_time, created_at) as timestamp) as created_at,\n        case when text_ad_landing_page is not null then 'text_ad'\n            when spotlight_landing_page is not null then 'spotlight'\n            else cast(null as TEXT)\n        end as click_uri_type,\n        \n        row_number() over (partition by id order by coalesce(last_modified_time, last_modified_at) desc) = 1 as is_latest_version\n\n    from macro\n\n), url_fields as (\n\n    select \n        *,\n        \n\n  \n    \n\n    split_part(\n        click_uri,\n        '?',\n        1\n        )\n\n\n  \n\n as base_url,\n        \n    \n    cast(\n\n  \n    \n\n    split_part(\n        \n\n  \n    \n\n    split_part(\n        \n\n    replace(\n        \n\n    replace(\n        \n\n    replace(\n        click_uri,\n        'android-app://',\n        ''\n    )\n\n\n,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n,\n        '/',\n        1\n        )\n\n\n  \n\n,\n        '?',\n        1\n        )\n\n\n  \n\n as TEXT)\n as url_host,\n        '/' || \n    \n    cast(\n\n  \n    \n\n    split_part(\n        \n\n    right(\n        \n\n    replace(\n        \n\n    replace(\n        click_uri,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n,\n        \n\n    length(\n        \n\n    replace(\n        \n\n    replace(\n        click_uri,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    )-coalesce(\n            nullif(\n\n    position(\n        '/' in \n\n    replace(\n        \n\n    replace(\n        click_uri,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ), 0),\n            \n\n    position(\n        '?' in \n\n    replace(\n        \n\n    replace(\n        click_uri,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ) - 1\n            )\n    ),\n        '?',\n        1\n        )\n\n\n  \n\n as TEXT)\n as url_path,\n        nullif(\n\n  \n    \n\n    split_part(\n        \n\n  \n    \n\n    split_part(\n        click_uri,\n        'utm_source=',\n        2\n        )\n\n\n  \n\n,\n        '&',\n        1\n        )\n\n\n  \n\n,'') as utm_source,\n        nullif(\n\n  \n    \n\n    split_part(\n        \n\n  \n    \n\n    split_part(\n        click_uri,\n        'utm_medium=',\n        2\n        )\n\n\n  \n\n,\n        '&',\n        1\n        )\n\n\n  \n\n,'') as utm_medium,\n        nullif(\n\n  \n    \n\n    split_part(\n        \n\n  \n    \n\n    split_part(\n        click_uri,\n        'utm_campaign=',\n        2\n        )\n\n\n  \n\n,\n        '&',\n        1\n        )\n\n\n  \n\n,'') as utm_campaign,\n        nullif(\n\n  \n    \n\n    split_part(\n        \n\n  \n    \n\n    split_part(\n        click_uri,\n        'utm_content=',\n        2\n        )\n\n\n  \n\n,\n        '&',\n        1\n        )\n\n\n  \n\n,'') as utm_content,\n        nullif(\n\n  \n    \n\n    split_part(\n        \n\n  \n    \n\n    split_part(\n        click_uri,\n        'utm_term=',\n        2\n        )\n\n\n  \n\n,\n        '&',\n        1\n        )\n\n\n  \n\n,'') as utm_term\n    \n    from fields\n)\n\nselect *\nfrom url_fields", "relation_name": "\"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__creative_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:17:36.053844Z", "completed_at": "2024-09-13T19:17:36.056971Z"}, {"name": "execute", "started_at": "2024-09-13T19:17:36.057203Z", "completed_at": "2024-09-13T19:17:36.057208Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00410008430480957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.not_null_stg_linkedin_ads__creative_history_creative_id.4d51d55474", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect creative_id\nfrom \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__creative_history\"\nwhere creative_id is null\n\n\n", "relation_name": null}], "elapsed_time": 2.039673089981079, "args": {"vars": {}, "cache_selected_only": false, "log_path": "/Users/joseph.markiewicz/Documents/dbt_packages/linkedin/dbt_linkedin_source/integration_tests/logs", "strict_mode": false, "target": "postgres", "write_json": true, "exclude": [], "source_freshness_run_project_hooks": false, "use_colors": true, "invocation_command": "dbt docs generate -t postgres", "favor_state": false, "print": true, "use_colors_file": true, "indirect_selection": "eager", "partial_parse_file_diff": true, "log_level_file": "debug", "partial_parse": true, "printer_width": 80, "log_format": "default", "require_explicit_package_overrides_for_builtin_materializations": true, "show_resource_report": false, "enable_legacy_logger": false, "project_dir": "/Users/joseph.markiewicz/Documents/dbt_packages/linkedin/dbt_linkedin_source/integration_tests", "defer": false, "require_resource_names_without_spaces": false, "select": [], "log_level": "info", "empty_catalog": false, "static_parser": true, "static": false, "send_anonymous_usage_stats": true, "quiet": false, "version_check": true, "warn_error_options": {"include": [], "exclude": []}, "log_format_file": "debug", "populate_cache": true, "which": "generate", "introspect": true, "profiles_dir": "/Users/joseph.markiewicz/.dbt", "compile": true, "log_file_max_bytes": 10485760, "macro_debugging": false}}
