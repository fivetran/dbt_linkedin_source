{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.3", "generated_at": "2023-12-12T20:34:18.439897Z", "invocation_id": "f3ae18b2-9da8-4863-9b8b-3c2c5c0d4545", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:34:17.619450Z", "completed_at": "2023-12-12T20:34:17.661654Z"}, {"name": "execute", "started_at": "2023-12-12T20:34:17.663604Z", "completed_at": "2023-12-12T20:34:17.663621Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.04886198043823242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__account_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"linkedin_source_integration_tests_3\".\"linkedin_account_history_data\"", "relation_name": "\"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__account_history_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:34:17.658489Z", "completed_at": "2023-12-12T20:34:17.662044Z"}, {"name": "execute", "started_at": "2023-12-12T20:34:17.664484Z", "completed_at": "2023-12-12T20:34:17.664489Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0487363338470459, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__campaign_group_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"linkedin_source_integration_tests_3\".\"linkedin_campaign_group_history_data\"", "relation_name": "\"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__campaign_group_history_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:34:17.655310Z", "completed_at": "2023-12-12T20:34:17.662710Z"}, {"name": "execute", "started_at": "2023-12-12T20:34:17.665493Z", "completed_at": "2023-12-12T20:34:17.665497Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.050585031509399414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__ad_analytics_by_creative_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"linkedin_source_integration_tests_3\".\"linkedin_ad_analytics_by_creative_data\"", "relation_name": "\"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__ad_analytics_by_creative_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:34:17.626049Z", "completed_at": "2023-12-12T20:34:17.663017Z"}, {"name": "execute", "started_at": "2023-12-12T20:34:17.665817Z", "completed_at": "2023-12-12T20:34:17.665825Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.05155205726623535, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__ad_analytics_by_campaign_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"linkedin_source_integration_tests_3\".\"linkedin_ad_analytics_by_campaign_data\"", "relation_name": "\"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__ad_analytics_by_campaign_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:34:17.679071Z", "completed_at": "2023-12-12T20:34:17.680217Z"}, {"name": "execute", "started_at": "2023-12-12T20:34:17.683326Z", "completed_at": "2023-12-12T20:34:17.683333Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.013369083404541016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.linkedin_source_integration_tests.linkedin_account_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:34:17.680692Z", "completed_at": "2023-12-12T20:34:17.681614Z"}, {"name": "execute", "started_at": "2023-12-12T20:34:17.683612Z", "completed_at": "2023-12-12T20:34:17.683615Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.013520002365112305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.linkedin_source_integration_tests.linkedin_ad_analytics_by_campaign_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:34:17.672399Z", "completed_at": "2023-12-12T20:34:17.681911Z"}, {"name": "execute", "started_at": "2023-12-12T20:34:17.683889Z", "completed_at": "2023-12-12T20:34:17.683893Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01682877540588379, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__campaign_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"linkedin_source_integration_tests_3\".\"linkedin_campaign_history_data\"", "relation_name": "\"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__campaign_history_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:34:17.676093Z", "completed_at": "2023-12-12T20:34:17.683028Z"}, {"name": "execute", "started_at": "2023-12-12T20:34:17.686205Z", "completed_at": "2023-12-12T20:34:17.686210Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.017222166061401367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__creative_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"linkedin_source_integration_tests_3\".\"linkedin_creative_history_data\"", "relation_name": "\"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__creative_history_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:34:17.690584Z", "completed_at": "2023-12-12T20:34:17.692455Z"}, {"name": "execute", "started_at": "2023-12-12T20:34:17.697694Z", "completed_at": "2023-12-12T20:34:17.697699Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.010998010635375977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.linkedin_source_integration_tests.linkedin_ad_analytics_by_creative_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:34:17.692807Z", "completed_at": "2023-12-12T20:34:17.693864Z"}, {"name": "execute", "started_at": "2023-12-12T20:34:17.697939Z", "completed_at": "2023-12-12T20:34:17.697941Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.011209964752197266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.linkedin_source_integration_tests.linkedin_campaign_group_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:34:17.694265Z", "completed_at": "2023-12-12T20:34:17.695317Z"}, {"name": "execute", "started_at": "2023-12-12T20:34:17.698182Z", "completed_at": "2023-12-12T20:34:17.698184Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011325836181640625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.linkedin_source_integration_tests.linkedin_campaign_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:34:17.696536Z", "completed_at": "2023-12-12T20:34:17.697434Z"}, {"name": "execute", "started_at": "2023-12-12T20:34:17.700327Z", "completed_at": "2023-12-12T20:34:17.700331Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.011767148971557617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.linkedin_source_integration_tests.linkedin_creative_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:34:17.704939Z", "completed_at": "2023-12-12T20:34:18.043391Z"}, {"name": "execute", "started_at": "2023-12-12T20:34:18.045455Z", "completed_at": "2023-12-12T20:34:18.045458Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.37084507942199707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__account_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select *\n    from \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__account_history_tmp\"\n\n), macro as (\n\n    select\n        \n    \n    \n    created_time\n    \n as \n    \n    created_time\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    last_modified_time\n    \n as \n    \n    last_modified_time\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    cast(null as TEXT) as \n    \n    status\n    \n , \n    cast(null as TEXT) as \n    \n    type\n    \n , \n    \n    \n    version_tag\n    \n as \n    \n    version_tag\n    \n\n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n\n), fields as (\n\n    select \n        source_relation,\n        id as account_id,\n        name as account_name,\n        currency,\n        cast(version_tag as numeric) as version_tag,\n        status,\n        type,\n        cast(last_modified_time as timestamp) as last_modified_at,\n        cast(created_time as timestamp) as created_at,\n        row_number() over (partition by source_relation, id order by last_modified_time desc) = 1 as is_latest_version\n\n    from macro\n\n)\n\nselect *\nfrom fields", "relation_name": "\"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__account_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:34:17.711392Z", "completed_at": "2023-12-12T20:34:18.031219Z"}, {"name": "execute", "started_at": "2023-12-12T20:34:18.043804Z", "completed_at": "2023-12-12T20:34:18.043814Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.3710191249847412, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__campaign_group_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select *\n    from \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__campaign_group_history_tmp\"\n\n), macro as (\n\n    select\n        \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    cast(null as boolean) as \n    \n    backfilled\n    \n , \n    \n    \n    created_time\n    \n as \n    \n    created_time\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    last_modified_time\n    \n as \n    \n    last_modified_time\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    cast(null as timestamp) as \n    \n    run_schedule_end\n    \n , \n    cast(null as timestamp) as \n    \n    run_schedule_start\n    \n , \n    cast(null as TEXT) as \n    \n    status\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n\n), fields as (\n\n    select \n        source_relation,\n        id as campaign_group_id,\n        name as campaign_group_name,\n        account_id,\n        status,\n        backfilled as is_backfilled,\n        cast(run_schedule_start as timestamp) as run_schedule_start_at,\n        cast(run_schedule_end as timestamp) as run_schedule_end_at,\n        cast(last_modified_time as timestamp) as last_modified_at,\n        cast(created_time as timestamp) as created_at,\n        row_number() over (partition by source_relation, id order by last_modified_time desc) = 1 as is_latest_version\n\n    from macro\n\n)\n\nselect *\nfrom fields", "relation_name": "\"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__campaign_group_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:34:17.716602Z", "completed_at": "2023-12-12T20:34:18.044717Z"}, {"name": "execute", "started_at": "2023-12-12T20:34:18.046499Z", "completed_at": "2023-12-12T20:34:18.046501Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.37344813346862793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__ad_analytics_by_creative", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select *\n    from \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__ad_analytics_by_creative_tmp\"\n\n), macro as (\n\n    select\n        \n    \n    \n    clicks\n    \n as \n    \n    clicks\n    \n, \n    \n    \n    cost_in_local_currency\n    \n as \n    \n    cost_in_local_currency\n    \n, \n    \n    \n    cost_in_usd\n    \n as \n    \n    cost_in_usd\n    \n, \n    \n    \n    creative_id\n    \n as \n    \n    creative_id\n    \n, \n    \n    \n    day\n    \n as \n    \n    day\n    \n, \n    \n    \n    impressions\n    \n as \n    \n    impressions\n    \n\n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n\n), fields as (\n\n    select\n        source_relation,\n        date_trunc('day', day) as date_day,\n        creative_id,\n        clicks, \n        impressions,\n        \n        cost_in_usd as cost\n        \n\n        \n\n\n\n\n\n    from macro\n\n)\n\nselect *\nfrom fields", "relation_name": "\"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__ad_analytics_by_creative\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:34:17.722274Z", "completed_at": "2023-12-12T20:34:18.044164Z"}, {"name": "execute", "started_at": "2023-12-12T20:34:18.045984Z", "completed_at": "2023-12-12T20:34:18.045987Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.3726050853729248, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__ad_analytics_by_campaign", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__ad_analytics_by_campaign_tmp\"\n),\n\nmacro as (\n\n    select\n        \n    \n    \n    campaign_id\n    \n as \n    \n    campaign_id\n    \n, \n    \n    \n    clicks\n    \n as \n    \n    clicks\n    \n, \n    \n    \n    cost_in_local_currency\n    \n as \n    \n    cost_in_local_currency\n    \n, \n    \n    \n    cost_in_usd\n    \n as \n    \n    cost_in_usd\n    \n, \n    \n    \n    day\n    \n as \n    \n    day\n    \n, \n    \n    \n    impressions\n    \n as \n    \n    impressions\n    \n\n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfields as (\n    \n    select \n        source_relation,\n        date_trunc('day', day) as date_day,\n        campaign_id,\n        clicks,\n        impressions,\n        \n        cost_in_usd as cost\n        \n\n        \n\n\n\n\n\n    from macro\n)\n\nselect *\nfrom fields", "relation_name": "\"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__ad_analytics_by_campaign\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:34:18.090823Z", "completed_at": "2023-12-12T20:34:18.103997Z"}, {"name": "execute", "started_at": "2023-12-12T20:34:18.105070Z", "completed_at": "2023-12-12T20:34:18.105076Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.016969919204711914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.dbt_utils_unique_combination_of_columns_stg_linkedin_ads__account_history_source_relation__account_id__version_tag.c7a0383d8c", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, account_id, version_tag\n    from \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__account_history\"\n    group by source_relation, account_id, version_tag\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:34:18.098620Z", "completed_at": "2023-12-12T20:34:18.104299Z"}, {"name": "execute", "started_at": "2023-12-12T20:34:18.105338Z", "completed_at": "2023-12-12T20:34:18.105341Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.017104148864746094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.not_null_stg_linkedin_ads__account_history_account_id.a9fa7f93c0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__account_history\"\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:34:18.143558Z", "completed_at": "2023-12-12T20:34:18.147007Z"}, {"name": "execute", "started_at": "2023-12-12T20:34:18.147583Z", "completed_at": "2023-12-12T20:34:18.147589Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.04039287567138672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.dbt_utils_unique_combination_of_columns_stg_linkedin_ads__campaign_group_history_source_relation__last_modified_at__campaign_group_id.4c9f328639", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, last_modified_at, campaign_group_id\n    from \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__campaign_group_history\"\n    group by source_relation, last_modified_at, campaign_group_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:34:18.108492Z", "completed_at": "2023-12-12T20:34:18.148612Z"}, {"name": "execute", "started_at": "2023-12-12T20:34:18.149856Z", "completed_at": "2023-12-12T20:34:18.149860Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.04582095146179199, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.not_null_stg_linkedin_ads__account_history_version_tag.58c46c5d81", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect version_tag\nfrom \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__account_history\"\nwhere version_tag is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:34:18.150119Z", "completed_at": "2023-12-12T20:34:18.154504Z"}, {"name": "execute", "started_at": "2023-12-12T20:34:18.157746Z", "completed_at": "2023-12-12T20:34:18.157751Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.009251832962036133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.not_null_stg_linkedin_ads__campaign_group_history_campaign_group_id.3888f3777d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_group_id\nfrom \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__campaign_group_history\"\nwhere campaign_group_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:34:18.154788Z", "completed_at": "2023-12-12T20:34:18.158812Z"}, {"name": "execute", "started_at": "2023-12-12T20:34:18.159963Z", "completed_at": "2023-12-12T20:34:18.159966Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009683370590209961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.not_null_stg_linkedin_ads__campaign_group_history_last_modified_at.a716e2a7ea", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect last_modified_at\nfrom \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__campaign_group_history\"\nwhere last_modified_at is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:34:18.160230Z", "completed_at": "2023-12-12T20:34:18.168120Z"}, {"name": "execute", "started_at": "2023-12-12T20:34:18.168710Z", "completed_at": "2023-12-12T20:34:18.168715Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.010076761245727539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.dbt_utils_unique_combination_of_columns_stg_linkedin_ads__ad_analytics_by_creative_source_relation__date_day__creative_id.7b7d839d38", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, creative_id\n    from \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__ad_analytics_by_creative\"\n    group by source_relation, date_day, creative_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:34:18.164756Z", "completed_at": "2023-12-12T20:34:18.169723Z"}, {"name": "execute", "started_at": "2023-12-12T20:34:18.170867Z", "completed_at": "2023-12-12T20:34:18.170870Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009937047958374023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.not_null_stg_linkedin_ads__ad_analytics_by_creative_creative_id.062abfe14b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect creative_id\nfrom \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__ad_analytics_by_creative\"\nwhere creative_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:34:18.171143Z", "completed_at": "2023-12-12T20:34:18.175166Z"}, {"name": "execute", "started_at": "2023-12-12T20:34:18.178922Z", "completed_at": "2023-12-12T20:34:18.178928Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.009414911270141602, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.not_null_stg_linkedin_ads__ad_analytics_by_creative_date_day.cb81bc4766", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__ad_analytics_by_creative\"\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:34:18.175903Z", "completed_at": "2023-12-12T20:34:18.180635Z"}, {"name": "execute", "started_at": "2023-12-12T20:34:18.183930Z", "completed_at": "2023-12-12T20:34:18.183935Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009579181671142578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.dbt_utils_unique_combination_of_columns_stg_linkedin_ads__ad_analytics_by_campaign_source_relation__date_day__campaign_id.41aa0d6322", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, campaign_id\n    from \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__ad_analytics_by_campaign\"\n    group by source_relation, date_day, campaign_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:34:18.180930Z", "completed_at": "2023-12-12T20:34:18.185354Z"}, {"name": "execute", "started_at": "2023-12-12T20:34:18.188812Z", "completed_at": "2023-12-12T20:34:18.188817Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.00927114486694336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.not_null_stg_linkedin_ads__ad_analytics_by_campaign_campaign_id.d6ae242f1a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__ad_analytics_by_campaign\"\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:34:18.186079Z", "completed_at": "2023-12-12T20:34:18.189765Z"}, {"name": "execute", "started_at": "2023-12-12T20:34:18.190279Z", "completed_at": "2023-12-12T20:34:18.190282Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005706071853637695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.not_null_stg_linkedin_ads__ad_analytics_by_campaign_date_day.ef97bed766", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__ad_analytics_by_campaign\"\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:34:18.077782Z", "completed_at": "2023-12-12T20:34:18.355969Z"}, {"name": "execute", "started_at": "2023-12-12T20:34:18.357011Z", "completed_at": "2023-12-12T20:34:18.357020Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.3400149345397949, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__campaign_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select *\n    from \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__campaign_history_tmp\"\n\n), macro as (\n\n    select \n        \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    cast(null as boolean) as \n    \n    audience_expansion_enabled\n    \n , \n    \n    \n    campaign_group_id\n    \n as \n    \n    campaign_group_id\n    \n, \n    cast(null as TEXT) as \n    \n    cost_type\n    \n , \n    \n    \n    created_time\n    \n as \n    \n    created_time\n    \n, \n    cast(null as TEXT) as \n    \n    creative_selection\n    \n , \n    cast(null as float) as \n    \n    daily_budget_amount\n    \n , \n    cast(null as TEXT) as \n    \n    daily_budget_currency_code\n    \n , \n    cast(null as TEXT) as \n    \n    format\n    \n , \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    last_modified_time\n    \n as \n    \n    last_modified_time\n    \n, \n    cast(null as TEXT) as \n    \n    locale_country\n    \n , \n    cast(null as TEXT) as \n    \n    locale_language\n    \n , \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    cast(null as TEXT) as \n    \n    objective_type\n    \n , \n    cast(null as boolean) as \n    \n    offsite_delivery_enabled\n    \n , \n    cast(null as TEXT) as \n    \n    optimization_target_type\n    \n , \n    cast(null as timestamp) as \n    \n    run_schedule_end\n    \n , \n    cast(null as timestamp) as \n    \n    run_schedule_start\n    \n , \n    cast(null as TEXT) as \n    \n    status\n    \n , \n    cast(null as TEXT) as \n    \n    type\n    \n , \n    cast(null as float) as \n    \n    unit_cost_amount\n    \n , \n    cast(null as TEXT) as \n    \n    unit_cost_currency_code\n    \n , \n    \n    \n    version_tag\n    \n as \n    \n    version_tag\n    \n\n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n\n), fields as (\n\n    select \n        source_relation,\n        id as campaign_id,\n        name as campaign_name,\n        cast(version_tag as numeric) as version_tag,\n        campaign_group_id,\n        account_id,\n        status,\n        type,\n        cost_type,\n        creative_selection,\n        daily_budget_amount,\n        daily_budget_currency_code,\n        unit_cost_amount,\n        unit_cost_currency_code,\n        format,\n        locale_country,\n        locale_language,\n        objective_type,\n        optimization_target_type,\n        audience_expansion_enabled as is_audience_expansion_enabled,\n        offsite_delivery_enabled as is_offsite_delivery_enabled,\n        cast(run_schedule_start as timestamp) as run_schedule_start_at,\n        cast(run_schedule_end as timestamp) as run_schedule_end_at,\n        cast(last_modified_time as timestamp) as last_modified_at,\n        cast(created_time as timestamp) as created_at,\n        row_number() over (partition by source_relation, id order by last_modified_time desc) = 1 as is_latest_version\n\n    from macro\n\n)\n\nselect *\nfrom fields", "relation_name": "\"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__campaign_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:34:18.083580Z", "completed_at": "2023-12-12T20:34:18.387191Z"}, {"name": "execute", "started_at": "2023-12-12T20:34:18.387765Z", "completed_at": "2023-12-12T20:34:18.387772Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.34008002281188965, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__creative_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select *\n    from \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__creative_history_tmp\"\n\n), macro as (\n\n    select \n        \n    \n    \n    campaign_id\n    \n as \n    \n    campaign_id\n    \n, \n    \n    \n    click_uri\n    \n as \n    \n    click_uri\n    \n, \n    \n    \n    created_time\n    \n as \n    \n    created_time\n    \n, \n    cast(null as timestamp) as \n    \n    created_at\n    \n , \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    cast(null as timestamp) as \n    \n    last_modified_time\n    \n , \n    \n    \n    last_modified_at\n    \n as \n    \n    last_modified_at\n    \n, \n    \n    \n    intended_status\n    \n as \n    \n    intended_status\n    \n, \n    cast(null as TEXT) as \n    \n    status\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n\n), fields as (\n\n    select\n        source_relation,\n        id as creative_id,\n        campaign_id,\n        coalesce(intended_status, status) as status,\n        click_uri,\n        cast(coalesce(last_modified_at, last_modified_time) as timestamp) as last_modified_at,\n        cast(coalesce(created_at, created_time) as timestamp) as created_at,\n        row_number() over (partition by source_relation, id order by coalesce(last_modified_at, last_modified_time) desc) = 1 as is_latest_version\n\n    from macro\n\n), url_fields as (\n\n    select \n        *,\n        \n\n  \n    \n\n    split_part(\n        click_uri,\n        '?',\n        1\n        )\n\n\n  \n\n as base_url,\n        \n    \n    cast(\n\n  \n    \n\n    split_part(\n        \n\n  \n    \n\n    split_part(\n        \n\n    replace(\n        \n\n    replace(\n        \n\n    replace(\n        click_uri,\n        'android-app://',\n        ''\n    )\n\n\n,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n,\n        '/',\n        1\n        )\n\n\n  \n\n,\n        '?',\n        1\n        )\n\n\n  \n\n as TEXT)\n as url_host,\n        '/' || \n    \n    cast(\n\n  \n    \n\n    split_part(\n        \n\n    right(\n        \n\n    replace(\n        \n\n    replace(\n        click_uri,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n,\n        \n\n    length(\n        \n\n    replace(\n        \n\n    replace(\n        click_uri,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    )-coalesce(\n            nullif(\n\n    position(\n        '/' in \n\n    replace(\n        \n\n    replace(\n        click_uri,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ), 0),\n            \n\n    position(\n        '?' in \n\n    replace(\n        \n\n    replace(\n        click_uri,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ) - 1\n            )\n    ),\n        '?',\n        1\n        )\n\n\n  \n\n as TEXT)\n as url_path,\n        nullif(\n\n  \n    \n\n    split_part(\n        \n\n  \n    \n\n    split_part(\n        click_uri,\n        'utm_source=',\n        2\n        )\n\n\n  \n\n,\n        '&',\n        1\n        )\n\n\n  \n\n,'') as utm_source,\n        nullif(\n\n  \n    \n\n    split_part(\n        \n\n  \n    \n\n    split_part(\n        click_uri,\n        'utm_medium=',\n        2\n        )\n\n\n  \n\n,\n        '&',\n        1\n        )\n\n\n  \n\n,'') as utm_medium,\n        nullif(\n\n  \n    \n\n    split_part(\n        \n\n  \n    \n\n    split_part(\n        click_uri,\n        'utm_campaign=',\n        2\n        )\n\n\n  \n\n,\n        '&',\n        1\n        )\n\n\n  \n\n,'') as utm_campaign,\n        nullif(\n\n  \n    \n\n    split_part(\n        \n\n  \n    \n\n    split_part(\n        click_uri,\n        'utm_content=',\n        2\n        )\n\n\n  \n\n,\n        '&',\n        1\n        )\n\n\n  \n\n,'') as utm_content,\n        nullif(\n\n  \n    \n\n    split_part(\n        \n\n  \n    \n\n    split_part(\n        click_uri,\n        'utm_term=',\n        2\n        )\n\n\n  \n\n,\n        '&',\n        1\n        )\n\n\n  \n\n,'') as utm_term\n    \n    from fields\n)\n\nselect *\nfrom url_fields", "relation_name": "\"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__creative_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:34:18.419961Z", "completed_at": "2023-12-12T20:34:18.432878Z"}, {"name": "execute", "started_at": "2023-12-12T20:34:18.434773Z", "completed_at": "2023-12-12T20:34:18.434779Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.018657922744750977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.dbt_utils_unique_combination_of_columns_stg_linkedin_ads__campaign_history_source_relation__version_tag__campaign_id.65ed9cedae", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, version_tag, campaign_id\n    from \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__campaign_history\"\n    group by source_relation, version_tag, campaign_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:34:18.423343Z", "completed_at": "2023-12-12T20:34:18.433192Z"}, {"name": "execute", "started_at": "2023-12-12T20:34:18.435274Z", "completed_at": "2023-12-12T20:34:18.435278Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.018885135650634766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.not_null_stg_linkedin_ads__campaign_history_campaign_id.b026971ca2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__campaign_history\"\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:34:18.425920Z", "completed_at": "2023-12-12T20:34:18.433508Z"}, {"name": "execute", "started_at": "2023-12-12T20:34:18.435584Z", "completed_at": "2023-12-12T20:34:18.435587Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.019057035446166992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.not_null_stg_linkedin_ads__campaign_history_version_tag.64954cc469", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect version_tag\nfrom \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__campaign_history\"\nwhere version_tag is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T20:34:18.428880Z", "completed_at": "2023-12-12T20:34:18.434056Z"}, {"name": "execute", "started_at": "2023-12-12T20:34:18.436466Z", "completed_at": "2023-12-12T20:34:18.436469Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.018963336944580078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.not_null_stg_linkedin_ads__creative_history_creative_id.4d51d55474", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect creative_id\nfrom \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__creative_history\"\nwhere creative_id is null\n\n\n", "relation_name": null}], "elapsed_time": 1.7503759860992432, "args": {"macro_debugging": false, "introspect": true, "version_check": true, "partial_parse_file_diff": true, "send_anonymous_usage_stats": true, "log_file_max_bytes": 10485760, "warn_error_options": {"include": [], "exclude": []}, "select": [], "indirect_selection": "eager", "defer": false, "log_format_file": "debug", "profiles_dir": "/Users/joseph.markiewicz/.dbt", "strict_mode": false, "target": "postgres", "populate_cache": true, "print": true, "enable_legacy_logger": false, "static": false, "log_format": "default", "use_colors_file": true, "log_level_file": "debug", "invocation_command": "dbt docs generate -t postgres", "favor_state": false, "printer_width": 80, "static_parser": true, "partial_parse": true, "compile": true, "write_json": true, "log_path": "/Users/joseph.markiewicz/Documents/dbt_packages/ad_reporting/linkedin/dbt_linkedin_source/integration_tests/logs", "project_dir": "/Users/joseph.markiewicz/Documents/dbt_packages/ad_reporting/linkedin/dbt_linkedin_source/integration_tests", "log_level": "info", "vars": {}, "quiet": false, "empty_catalog": false, "which": "generate", "use_colors": true, "show_resource_report": false, "cache_selected_only": false, "exclude": []}}