{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.6", "generated_at": "2024-09-13T19:32:04.383732Z", "invocation_id": "6f07d2d0-ee24-4598-90c2-8136518902a6", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:32:03.601029Z", "completed_at": "2024-09-13T19:32:03.630395Z"}, {"name": "execute", "started_at": "2024-09-13T19:32:03.631048Z", "completed_at": "2024-09-13T19:32:03.631060Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03203892707824707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__account_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"linkedin_source_integration_tests_3\".\"linkedin_account_history_data\"", "relation_name": "\"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__account_history_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:32:03.622070Z", "completed_at": "2024-09-13T19:32:03.630780Z"}, {"name": "execute", "started_at": "2024-09-13T19:32:03.631703Z", "completed_at": "2024-09-13T19:32:03.631708Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03197598457336426, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__ad_analytics_by_campaign_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"linkedin_source_integration_tests_3\".\"linkedin_ad_analytics_by_campaign_data\"", "relation_name": "\"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__ad_analytics_by_campaign_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:32:03.624688Z", "completed_at": "2024-09-13T19:32:03.631481Z"}, {"name": "execute", "started_at": "2024-09-13T19:32:03.632626Z", "completed_at": "2024-09-13T19:32:03.632631Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03242993354797363, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__ad_analytics_by_creative_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"linkedin_source_integration_tests_3\".\"linkedin_ad_analytics_by_creative_data\"", "relation_name": "\"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__ad_analytics_by_creative_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:32:03.627729Z", "completed_at": "2024-09-13T19:32:03.632063Z"}, {"name": "execute", "started_at": "2024-09-13T19:32:03.633278Z", "completed_at": "2024-09-13T19:32:03.633283Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0328221321105957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__campaign_group_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"linkedin_source_integration_tests_3\".\"linkedin_campaign_group_history_data\"", "relation_name": "\"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__campaign_group_history_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:32:03.641821Z", "completed_at": "2024-09-13T19:32:03.643066Z"}, {"name": "execute", "started_at": "2024-09-13T19:32:03.645109Z", "completed_at": "2024-09-13T19:32:03.645116Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.010349035263061523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.linkedin_source_integration_tests.linkedin_account_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:32:03.635537Z", "completed_at": "2024-09-13T19:32:03.643550Z"}, {"name": "execute", "started_at": "2024-09-13T19:32:03.645735Z", "completed_at": "2024-09-13T19:32:03.645739Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012172937393188477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__campaign_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"linkedin_source_integration_tests_3\".\"linkedin_campaign_history_data\"", "relation_name": "\"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__campaign_history_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:32:03.643787Z", "completed_at": "2024-09-13T19:32:03.644842Z"}, {"name": "execute", "started_at": "2024-09-13T19:32:03.646094Z", "completed_at": "2024-09-13T19:32:03.646097Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.010822772979736328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.linkedin_source_integration_tests.linkedin_ad_analytics_by_campaign_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:32:03.638719Z", "completed_at": "2024-09-13T19:32:03.645521Z"}, {"name": "execute", "started_at": "2024-09-13T19:32:03.646702Z", "completed_at": "2024-09-13T19:32:03.646705Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.012659311294555664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__creative_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"linkedin_source_integration_tests_3\".\"linkedin_creative_history_data\"", "relation_name": "\"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__creative_history_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:32:03.650608Z", "completed_at": "2024-09-13T19:32:03.651698Z"}, {"name": "execute", "started_at": "2024-09-13T19:32:03.654613Z", "completed_at": "2024-09-13T19:32:03.654619Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007096052169799805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.linkedin_source_integration_tests.linkedin_ad_analytics_by_creative_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:32:03.652136Z", "completed_at": "2024-09-13T19:32:03.653125Z"}, {"name": "execute", "started_at": "2024-09-13T19:32:03.656252Z", "completed_at": "2024-09-13T19:32:03.656256Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008191108703613281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.linkedin_source_integration_tests.linkedin_campaign_group_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:32:03.653345Z", "completed_at": "2024-09-13T19:32:03.654373Z"}, {"name": "execute", "started_at": "2024-09-13T19:32:03.656585Z", "completed_at": "2024-09-13T19:32:03.656588Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.008239984512329102, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.linkedin_source_integration_tests.linkedin_campaign_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:32:03.654991Z", "completed_at": "2024-09-13T19:32:03.656006Z"}, {"name": "execute", "started_at": "2024-09-13T19:32:03.657175Z", "completed_at": "2024-09-13T19:32:03.657179Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0073070526123046875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.linkedin_source_integration_tests.linkedin_creative_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:32:03.660130Z", "completed_at": "2024-09-13T19:32:04.011298Z"}, {"name": "execute", "started_at": "2024-09-13T19:32:04.011777Z", "completed_at": "2024-09-13T19:32:04.011789Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.37787914276123047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__account_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select *\n    from \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__account_history_tmp\"\n\n), macro as (\n\n    select\n        \n    \n    \n    created_time\n    \n as \n    \n    created_time\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    last_modified_time\n    \n as \n    \n    last_modified_time\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    cast(null as TEXT) as \n    \n    status\n    \n , \n    cast(null as TEXT) as \n    \n    type\n    \n , \n    \n    \n    version_tag\n    \n as \n    \n    version_tag\n    \n\n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n\n), fields as (\n\n    select \n        source_relation,\n        id as account_id,\n        name as account_name,\n        currency,\n        cast(version_tag as numeric) as version_tag,\n        status,\n        type,\n        cast(last_modified_time as timestamp) as last_modified_at,\n        cast(created_time as timestamp) as created_at,\n        \n        row_number() over (partition by id order by last_modified_time desc) = 1 as is_latest_version\n\n    from macro\n\n)\n\nselect *\nfrom fields", "relation_name": "\"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__account_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:32:03.682394Z", "completed_at": "2024-09-13T19:32:04.012439Z"}, {"name": "execute", "started_at": "2024-09-13T19:32:04.013127Z", "completed_at": "2024-09-13T19:32:04.013131Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.3843519687652588, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__campaign_group_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select *\n    from \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__campaign_group_history_tmp\"\n\n), macro as (\n\n    select\n        \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    cast(null as boolean) as \n    \n    backfilled\n    \n , \n    \n    \n    created_time\n    \n as \n    \n    created_time\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    last_modified_time\n    \n as \n    \n    last_modified_time\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    cast(null as timestamp) as \n    \n    run_schedule_end\n    \n , \n    cast(null as timestamp) as \n    \n    run_schedule_start\n    \n , \n    cast(null as TEXT) as \n    \n    status\n    \n \n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n\n), fields as (\n\n    select \n        source_relation,\n        id as campaign_group_id,\n        name as campaign_group_name,\n        account_id,\n        status,\n        backfilled as is_backfilled,\n        cast(run_schedule_start as timestamp) as run_schedule_start_at,\n        cast(run_schedule_end as timestamp) as run_schedule_end_at,\n        cast(last_modified_time as timestamp) as last_modified_at,\n        cast(created_time as timestamp) as created_at,\n        \n        row_number() over (partition by id order by last_modified_time desc) = 1 as is_latest_version\n\n    from macro\n\n)\n\nselect *\nfrom fields", "relation_name": "\"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__campaign_group_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:32:03.672592Z", "completed_at": "2024-09-13T19:32:04.012171Z"}, {"name": "execute", "started_at": "2024-09-13T19:32:04.012679Z", "completed_at": "2024-09-13T19:32:04.012684Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.385361909866333, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__ad_analytics_by_campaign", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__ad_analytics_by_campaign_tmp\"\n),\n\nmacro as (\n\n    select\n        \n    \n    \n    campaign_id\n    \n as \n    \n    campaign_id\n    \n, \n    \n    \n    clicks\n    \n as \n    \n    clicks\n    \n, \n    \n    \n    cost_in_local_currency\n    \n as \n    \n    cost_in_local_currency\n    \n, \n    \n    \n    cost_in_usd\n    \n as \n    \n    cost_in_usd\n    \n, \n    \n    \n    day\n    \n as \n    \n    day\n    \n, \n    \n    \n    impressions\n    \n as \n    \n    impressions\n    \n, \n    \n    \n    conversion_value_in_local_currency\n    \n as \n    \n    conversion_value_in_local_currency\n    \n, \n    \n    \n    external_website_conversions\n    \n as \n    \n    external_website_conversions\n    \n, \n    \n    \n    one_click_leads\n    \n as \n    \n    one_click_leads\n    \n\n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfields as (\n    \n    select \n        source_relation,\n        date_trunc('day', day) as date_day,\n        campaign_id,\n        clicks,\n        impressions,\n        \n        cost_in_usd as cost,\n        \n\n        coalesce(cast(conversion_value_in_local_currency as float), 0) as conversion_value_in_local_currency\n\n        \n            , coalesce(cast(external_website_conversions as bigint), 0) as external_website_conversions\n        \n            , coalesce(cast(one_click_leads as bigint), 0) as one_click_leads\n        \n\n        \n\n\n\n\n\n    from macro\n)\n\nselect *\nfrom fields", "relation_name": "\"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__ad_analytics_by_campaign\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:32:03.677442Z", "completed_at": "2024-09-13T19:32:04.012892Z"}, {"name": "execute", "started_at": "2024-09-13T19:32:04.013427Z", "completed_at": "2024-09-13T19:32:04.013431Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.38541388511657715, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__ad_analytics_by_creative", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select *\n    from \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__ad_analytics_by_creative_tmp\"\n\n), macro as (\n\n    select\n        \n    \n    \n    clicks\n    \n as \n    \n    clicks\n    \n, \n    \n    \n    cost_in_local_currency\n    \n as \n    \n    cost_in_local_currency\n    \n, \n    \n    \n    cost_in_usd\n    \n as \n    \n    cost_in_usd\n    \n, \n    \n    \n    creative_id\n    \n as \n    \n    creative_id\n    \n, \n    \n    \n    day\n    \n as \n    \n    day\n    \n, \n    \n    \n    impressions\n    \n as \n    \n    impressions\n    \n, \n    \n    \n    conversion_value_in_local_currency\n    \n as \n    \n    conversion_value_in_local_currency\n    \n, \n    \n    \n    external_website_conversions\n    \n as \n    \n    external_website_conversions\n    \n, \n    \n    \n    one_click_leads\n    \n as \n    \n    one_click_leads\n    \n\n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n\n), fields as (\n\n    select\n        source_relation,\n        date_trunc('day', day) as date_day,\n        creative_id,\n        clicks, \n        impressions,\n        \n        cost_in_usd as cost,\n        \n\n        coalesce(cast(conversion_value_in_local_currency as float), 0) as conversion_value_in_local_currency\n\n        \n            , coalesce(cast(external_website_conversions as bigint), 0) as external_website_conversions\n        \n            , coalesce(cast(one_click_leads as bigint), 0) as one_click_leads\n        \n\n        \n\n\n\n\n\n    from macro\n\n)\n\nselect *\nfrom fields", "relation_name": "\"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__ad_analytics_by_creative\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:32:04.053176Z", "completed_at": "2024-09-13T19:32:04.068233Z"}, {"name": "execute", "started_at": "2024-09-13T19:32:04.068492Z", "completed_at": "2024-09-13T19:32:04.068503Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02228999137878418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.dbt_utils_unique_combination_of_columns_stg_linkedin_ads__account_history_source_relation__account_id__version_tag.c7a0383d8c", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, account_id, version_tag\n    from \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__account_history\"\n    group by source_relation, account_id, version_tag\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:32:04.061572Z", "completed_at": "2024-09-13T19:32:04.072393Z"}, {"name": "execute", "started_at": "2024-09-13T19:32:04.072707Z", "completed_at": "2024-09-13T19:32:04.072717Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02625107765197754, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.not_null_stg_linkedin_ads__account_history_account_id.a9fa7f93c0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__account_history\"\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:32:04.069572Z", "completed_at": "2024-09-13T19:32:04.077139Z"}, {"name": "execute", "started_at": "2024-09-13T19:32:04.077410Z", "completed_at": "2024-09-13T19:32:04.077415Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00832986831665039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.not_null_stg_linkedin_ads__account_history_version_tag.58c46c5d81", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect version_tag\nfrom \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__account_history\"\nwhere version_tag is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:32:04.073927Z", "completed_at": "2024-09-13T19:32:04.081785Z"}, {"name": "execute", "started_at": "2024-09-13T19:32:04.082176Z", "completed_at": "2024-09-13T19:32:04.082183Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.00876617431640625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.dbt_utils_unique_combination_of_columns_stg_linkedin_ads__campaign_group_history_source_relation__last_modified_at__campaign_group_id.4c9f328639", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, last_modified_at, campaign_group_id\n    from \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__campaign_group_history\"\n    group by source_relation, last_modified_at, campaign_group_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:32:04.078681Z", "completed_at": "2024-09-13T19:32:04.083154Z"}, {"name": "execute", "started_at": "2024-09-13T19:32:04.083561Z", "completed_at": "2024-09-13T19:32:04.083564Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005578041076660156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.not_null_stg_linkedin_ads__campaign_group_history_campaign_group_id.3888f3777d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_group_id\nfrom \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__campaign_group_history\"\nwhere campaign_group_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:32:04.083902Z", "completed_at": "2024-09-13T19:32:04.087624Z"}, {"name": "execute", "started_at": "2024-09-13T19:32:04.091133Z", "completed_at": "2024-09-13T19:32:04.091142Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.008298158645629883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.not_null_stg_linkedin_ads__campaign_group_history_last_modified_at.a716e2a7ea", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect last_modified_at\nfrom \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__campaign_group_history\"\nwhere last_modified_at is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:32:04.087864Z", "completed_at": "2024-09-13T19:32:04.092184Z"}, {"name": "execute", "started_at": "2024-09-13T19:32:04.092609Z", "completed_at": "2024-09-13T19:32:04.092613Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005522966384887695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.dbt_utils_unique_combination_of_columns_stg_linkedin_ads__ad_analytics_by_campaign_source_relation__date_day__campaign_id.41aa0d6322", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, campaign_id\n    from \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__ad_analytics_by_campaign\"\n    group by source_relation, date_day, campaign_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:32:04.092947Z", "completed_at": "2024-09-13T19:32:04.097182Z"}, {"name": "execute", "started_at": "2024-09-13T19:32:04.100258Z", "completed_at": "2024-09-13T19:32:04.100269Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.008417129516601562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.dbt_utils_unique_combination_of_columns_stg_linkedin_ads__ad_analytics_by_creative_source_relation__date_day__creative_id.7b7d839d38", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, creative_id\n    from \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__ad_analytics_by_creative\"\n    group by source_relation, date_day, creative_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:32:04.097457Z", "completed_at": "2024-09-13T19:32:04.101708Z"}, {"name": "execute", "started_at": "2024-09-13T19:32:04.105317Z", "completed_at": "2024-09-13T19:32:04.105323Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00876307487487793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.not_null_stg_linkedin_ads__ad_analytics_by_campaign_campaign_id.d6ae242f1a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__ad_analytics_by_campaign\"\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:32:04.101920Z", "completed_at": "2024-09-13T19:32:04.106298Z"}, {"name": "execute", "started_at": "2024-09-13T19:32:04.106722Z", "completed_at": "2024-09-13T19:32:04.106726Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.005669116973876953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.not_null_stg_linkedin_ads__ad_analytics_by_campaign_date_day.ef97bed766", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__ad_analytics_by_campaign\"\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:32:04.107058Z", "completed_at": "2024-09-13T19:32:04.110604Z"}, {"name": "execute", "started_at": "2024-09-13T19:32:04.114383Z", "completed_at": "2024-09-13T19:32:04.114391Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008406877517700195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.not_null_stg_linkedin_ads__ad_analytics_by_creative_creative_id.062abfe14b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect creative_id\nfrom \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__ad_analytics_by_creative\"\nwhere creative_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:32:04.110823Z", "completed_at": "2024-09-13T19:32:04.117519Z"}, {"name": "execute", "started_at": "2024-09-13T19:32:04.121217Z", "completed_at": "2024-09-13T19:32:04.121227Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.011252880096435547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.not_null_stg_linkedin_ads__ad_analytics_by_creative_date_day.cb81bc4766", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__ad_analytics_by_creative\"\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:32:04.037289Z", "completed_at": "2024-09-13T19:32:04.307900Z"}, {"name": "execute", "started_at": "2024-09-13T19:32:04.308228Z", "completed_at": "2024-09-13T19:32:04.308236Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.31533288955688477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__campaign_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select *\n    from \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__campaign_history_tmp\"\n\n), macro as (\n\n    select \n        \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    cast(null as boolean) as \n    \n    audience_expansion_enabled\n    \n , \n    \n    \n    campaign_group_id\n    \n as \n    \n    campaign_group_id\n    \n, \n    cast(null as TEXT) as \n    \n    cost_type\n    \n , \n    \n    \n    created_time\n    \n as \n    \n    created_time\n    \n, \n    cast(null as TEXT) as \n    \n    creative_selection\n    \n , \n    cast(null as float) as \n    \n    daily_budget_amount\n    \n , \n    cast(null as TEXT) as \n    \n    daily_budget_currency_code\n    \n , \n    cast(null as TEXT) as \n    \n    format\n    \n , \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    last_modified_time\n    \n as \n    \n    last_modified_time\n    \n, \n    cast(null as TEXT) as \n    \n    locale_country\n    \n , \n    cast(null as TEXT) as \n    \n    locale_language\n    \n , \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    cast(null as TEXT) as \n    \n    objective_type\n    \n , \n    cast(null as boolean) as \n    \n    offsite_delivery_enabled\n    \n , \n    cast(null as TEXT) as \n    \n    optimization_target_type\n    \n , \n    cast(null as timestamp) as \n    \n    run_schedule_end\n    \n , \n    cast(null as timestamp) as \n    \n    run_schedule_start\n    \n , \n    cast(null as TEXT) as \n    \n    status\n    \n , \n    cast(null as TEXT) as \n    \n    type\n    \n , \n    cast(null as float) as \n    \n    unit_cost_amount\n    \n , \n    cast(null as TEXT) as \n    \n    unit_cost_currency_code\n    \n , \n    \n    \n    version_tag\n    \n as \n    \n    version_tag\n    \n\n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n\n), fields as (\n\n    select \n        source_relation,\n        id as campaign_id,\n        name as campaign_name,\n        cast(version_tag as numeric) as version_tag,\n        campaign_group_id,\n        account_id,\n        status,\n        type,\n        cost_type,\n        creative_selection,\n        daily_budget_amount,\n        daily_budget_currency_code,\n        unit_cost_amount,\n        unit_cost_currency_code,\n        format,\n        locale_country,\n        locale_language,\n        objective_type,\n        optimization_target_type,\n        audience_expansion_enabled as is_audience_expansion_enabled,\n        offsite_delivery_enabled as is_offsite_delivery_enabled,\n        cast(run_schedule_start as timestamp) as run_schedule_start_at,\n        cast(run_schedule_end as timestamp) as run_schedule_end_at,\n        cast(last_modified_time as timestamp) as last_modified_at,\n        cast(created_time as timestamp) as created_at,\n        \n        row_number() over (partition by id order by last_modified_time desc) = 1 as is_latest_version\n\n    from macro\n\n)\n\nselect *\nfrom fields", "relation_name": "\"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__campaign_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:32:04.355524Z", "completed_at": "2024-09-13T19:32:04.363265Z"}, {"name": "execute", "started_at": "2024-09-13T19:32:04.363519Z", "completed_at": "2024-09-13T19:32:04.363525Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009588956832885742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.dbt_utils_unique_combination_of_columns_stg_linkedin_ads__campaign_history_source_relation__version_tag__campaign_id.65ed9cedae", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, version_tag, campaign_id\n    from \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__campaign_history\"\n    group by source_relation, version_tag, campaign_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:32:04.358247Z", "completed_at": "2024-09-13T19:32:04.363976Z"}, {"name": "execute", "started_at": "2024-09-13T19:32:04.364204Z", "completed_at": "2024-09-13T19:32:04.364207Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.009934186935424805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.not_null_stg_linkedin_ads__campaign_history_campaign_id.b026971ca2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__campaign_history\"\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:32:04.360634Z", "completed_at": "2024-09-13T19:32:04.364578Z"}, {"name": "execute", "started_at": "2024-09-13T19:32:04.364783Z", "completed_at": "2024-09-13T19:32:04.364786Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.010195255279541016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.not_null_stg_linkedin_ads__campaign_history_version_tag.64954cc469", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect version_tag\nfrom \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__campaign_history\"\nwhere version_tag is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:32:04.047355Z", "completed_at": "2024-09-13T19:32:04.352846Z"}, {"name": "execute", "started_at": "2024-09-13T19:32:04.353345Z", "completed_at": "2024-09-13T19:32:04.353349Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.3318467140197754, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_source.stg_linkedin_ads__creative_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select *\n    from \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__creative_history_tmp\"\n\n), macro as (\n\n    select \n        \n    \n    \n    campaign_id\n    \n as \n    \n    campaign_id\n    \n, \n    \n    \n    click_uri\n    \n as \n    \n    click_uri\n    \n, \n    \n    \n    created_time\n    \n as \n    \n    created_time\n    \n, \n    cast(null as timestamp) as \n    \n    created_at\n    \n , \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    cast(null as timestamp) as \n    \n    last_modified_time\n    \n , \n    \n    \n    last_modified_at\n    \n as \n    \n    last_modified_at\n    \n, \n    \n    \n    intended_status\n    \n as \n    \n    intended_status\n    \n, \n    cast(null as TEXT) as \n    \n    status\n    \n , \n    \n    \n    text_ad_landing_page\n    \n as \n    \n    text_ad_landing_page\n    \n, \n    \n    \n    spotlight_landing_page\n    \n as \n    \n    spotlight_landing_page\n    \n\n\n\n    \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n\n), fields as (\n\n    select\n        source_relation,\n        id as creative_id,\n        campaign_id,\n        coalesce(status, intended_status) as status,\n        coalesce(text_ad_landing_page, spotlight_landing_page, click_uri) as click_uri,\n        cast(coalesce(last_modified_time, last_modified_at) as timestamp) as last_modified_at,\n        cast(coalesce(created_time, created_at) as timestamp) as created_at,\n        case when text_ad_landing_page is not null then 'text_ad'\n            when spotlight_landing_page is not null then 'spotlight'\n            else cast(null as TEXT)\n        end as click_uri_type,\n        \n        row_number() over (partition by id order by coalesce(last_modified_time, last_modified_at) desc) = 1 as is_latest_version\n\n    from macro\n\n), url_fields as (\n\n    select \n        *,\n        \n\n  \n    \n\n    split_part(\n        click_uri,\n        '?',\n        1\n        )\n\n\n  \n\n as base_url,\n        \n    \n    cast(\n\n  \n    \n\n    split_part(\n        \n\n  \n    \n\n    split_part(\n        \n\n    replace(\n        \n\n    replace(\n        \n\n    replace(\n        click_uri,\n        'android-app://',\n        ''\n    )\n\n\n,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n,\n        '/',\n        1\n        )\n\n\n  \n\n,\n        '?',\n        1\n        )\n\n\n  \n\n as TEXT)\n as url_host,\n        '/' || \n    \n    cast(\n\n  \n    \n\n    split_part(\n        \n\n    right(\n        \n\n    replace(\n        \n\n    replace(\n        click_uri,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n,\n        \n\n    length(\n        \n\n    replace(\n        \n\n    replace(\n        click_uri,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    )-coalesce(\n            nullif(\n\n    position(\n        '/' in \n\n    replace(\n        \n\n    replace(\n        click_uri,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ), 0),\n            \n\n    position(\n        '?' in \n\n    replace(\n        \n\n    replace(\n        click_uri,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    ) - 1\n            )\n    ),\n        '?',\n        1\n        )\n\n\n  \n\n as TEXT)\n as url_path,\n        nullif(\n\n  \n    \n\n    split_part(\n        \n\n  \n    \n\n    split_part(\n        click_uri,\n        'utm_source=',\n        2\n        )\n\n\n  \n\n,\n        '&',\n        1\n        )\n\n\n  \n\n,'') as utm_source,\n        nullif(\n\n  \n    \n\n    split_part(\n        \n\n  \n    \n\n    split_part(\n        click_uri,\n        'utm_medium=',\n        2\n        )\n\n\n  \n\n,\n        '&',\n        1\n        )\n\n\n  \n\n,'') as utm_medium,\n        nullif(\n\n  \n    \n\n    split_part(\n        \n\n  \n    \n\n    split_part(\n        click_uri,\n        'utm_campaign=',\n        2\n        )\n\n\n  \n\n,\n        '&',\n        1\n        )\n\n\n  \n\n,'') as utm_campaign,\n        nullif(\n\n  \n    \n\n    split_part(\n        \n\n  \n    \n\n    split_part(\n        click_uri,\n        'utm_content=',\n        2\n        )\n\n\n  \n\n,\n        '&',\n        1\n        )\n\n\n  \n\n,'') as utm_content,\n        nullif(\n\n  \n    \n\n    split_part(\n        \n\n  \n    \n\n    split_part(\n        click_uri,\n        'utm_term=',\n        2\n        )\n\n\n  \n\n,\n        '&',\n        1\n        )\n\n\n  \n\n,'') as utm_term\n    \n    from fields\n)\n\nselect *\nfrom url_fields", "relation_name": "\"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__creative_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-13T19:32:04.379093Z", "completed_at": "2024-09-13T19:32:04.382012Z"}, {"name": "execute", "started_at": "2024-09-13T19:32:04.382245Z", "completed_at": "2024-09-13T19:32:04.382251Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0037779808044433594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_source.not_null_stg_linkedin_ads__creative_history_creative_id.4d51d55474", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect creative_id\nfrom \"postgres\".\"linkedin_source_integration_tests_3_linkedin_ads_source\".\"stg_linkedin_ads__creative_history\"\nwhere creative_id is null\n\n\n", "relation_name": null}], "elapsed_time": 2.1339828968048096, "args": {"printer_width": 80, "enable_legacy_logger": false, "favor_state": false, "introspect": true, "target": "postgres", "require_explicit_package_overrides_for_builtin_materializations": true, "source_freshness_run_project_hooks": false, "defer": false, "compile": true, "static": false, "log_level": "info", "vars": {}, "log_file_max_bytes": 10485760, "invocation_command": "dbt docs generate -t postgres", "log_path": "/Users/joseph.markiewicz/Documents/dbt_packages/linkedin/dbt_linkedin_source/integration_tests/logs", "use_colors": true, "warn_error_options": {"include": [], "exclude": []}, "profiles_dir": "/Users/joseph.markiewicz/.dbt", "indirect_selection": "eager", "exclude": [], "use_colors_file": true, "print": true, "macro_debugging": false, "write_json": true, "populate_cache": true, "partial_parse": true, "log_level_file": "debug", "cache_selected_only": false, "partial_parse_file_diff": true, "strict_mode": false, "static_parser": true, "show_resource_report": false, "empty_catalog": false, "log_format": "default", "require_resource_names_without_spaces": false, "send_anonymous_usage_stats": true, "version_check": true, "project_dir": "/Users/joseph.markiewicz/Documents/dbt_packages/linkedin/dbt_linkedin_source/integration_tests", "select": [], "quiet": false, "log_format_file": "debug", "which": "generate"}}